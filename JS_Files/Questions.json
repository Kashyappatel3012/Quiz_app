[
  {
      "question": "What is the purpose of the 'use strict' directive in JavaScript?",
      "options": [
          "A. To enable strict mode, which catches common coding errors and prevents the use of certain features",
          "B. To include external JavaScript libraries",
          "C. To improve performance by minimizing code execution",
          "D. To create asynchronous functions"
      ],
      "answer": "A. To enable strict mode, which catches common coding errors and prevents the use of certain features"
  },
  {
      "question": "What is the difference between 'let', 'const', and 'var' in JavaScript for variable declaration?",
      "options": [
          "A. 'let' and 'const' have block scope, while 'var' has function scope",
          "B. 'let' and 'const' are used for asynchronous programming, while 'var' is for synchronous programming",
          "C. 'let' is used for constants, 'const' for variables, and 'var' for functions",
          "D. 'let' and 'const' have global scope, while 'var' has local scope"
      ],
      "answer": "A. 'let' and 'const' have block scope, while 'var' has function scope"
  },
  {
      "question": "What is the purpose of the 'this' keyword in JavaScript?",
      "options": [
          "A. It refers to the current function's prototype",
          "B. It refers to the global object",
          "C. It refers to the current object or instance",
          "D. It is used for conditional statements"
      ],
      "answer": "C. It refers to the current object or instance"
  },
  {
      "question": "How does JavaScript handle asynchronous operations?",
      "options": [
          "A. Using callbacks",
          "B. Using promises",
          "C. Using async/await",
          "D. All of the above"
      ],
      "answer": "D. All of the above"
  },
  {
      "question": "What is the difference between '==' and '===' in JavaScript?",
      "options": [
          "A. '==' compares values for equality, while '===' compares both values and types",
          "B. '===' is used for assignment, while '==' is used for equality comparison",
          "C. '==' compares both values and types, while '===' compares only values",
          "D. '===' is shorthand for '==' in JavaScript"
      ],
      "answer": "A. '==' compares values for equality, while '===' compares both values and types"
  },
  {
      "question": "What is a closure in JavaScript?",
      "options": [
          "A. A built-in function for closing a browser window",
          "B. A way to create private variables in JavaScript",
          "C. A function that can be called before it is defined",
          "D. A combination of a function and the lexical environment within which that function was declared"
      ],
      "answer": "D. A combination of a function and the lexical environment within which that function was declared"
  },
  {
      "question": "What is the purpose of the 'addEventListener' method in JavaScript?",
      "options": [
          "A. To add a new HTML element to the document",
          "B. To create an event handler function",
          "C. To include an external JavaScript file",
          "D. To add an event listener to an HTML element"
      ],
      "answer": "D. To add an event listener to an HTML element"
  },
  {
      "question": "How can you check if a variable is an array in JavaScript?",
      "options": [
          "A. Using the 'typeof' operator",
          "B. Using the 'isArray' method",
          "C. Using the 'instanceof' operator",
          "D. All of the above"
      ],
      "answer": "B. Using the 'isArray' method"
  },
  {
      "question": "What is the purpose of the 'map' function in JavaScript?",
      "options": [
          "A. To create a new array with the results of calling a provided function on every element in the array",
          "B. To check if all elements in an array pass a certain test",
          "C. To reduce the array to a single value",
          "D. To filter elements in an array based on a test function"
      ],
      "answer": "A. To create a new array with the results of calling a provided function on every element in the array"
  },
  {
      "question": "What is the difference between 'null' and 'undefined' in JavaScript?",
      "options": [
          "A. They are interchangeable and can be used in place of each other",
          "B. 'null' is an object, while 'undefined' is a primitive value",
          "C. 'null' represents the absence of a value, while 'undefined' is assigned by the JavaScript engine",
          "D. 'null' is used for variables that have not been declared, while 'undefined' is explicitly assigned by the programmer"
      ],
      "answer": "C. 'null' represents the absence of a value, while 'undefined' is assigned by the JavaScript engine"
  },
  {
      "question": "What is the purpose of the 'bind' method in JavaScript?",
      "options": [
          "A. To concatenate two strings",
          "B. To create a new array by combining multiple arrays",
          "C. To associate a function with a specific object, ensuring 'this' refers to that object",
          "D. To convert a string to lowercase"
      ],
      "answer": "C. To associate a function with a specific object, ensuring 'this' refers to that object"
  },
  {
      "question": "How can you clone an object in JavaScript?",
      "options": [
          "A. Using the 'clone' method",
          "B. Using the 'copy' method",
          "C. Using the 'Object.clone' function",
          "D. Using the 'Object.assign' method or the spread operator ({...})"
      ],
      "answer": "D. Using the 'Object.assign' method or the spread operator ({...})"
  },
  {
      "question": "What is the purpose of the 'localStorage' object in JavaScript?",
      "options": [
          "A. To store data with no expiration date",
          "B. To store data that expires when the browser is closed",
          "C. To store session-specific data",
          "D. To store data that can be accessed across different browser tabs"
      ],
      "answer": "A. To store data with no expiration date"
  },
  {
      "question": "What is the event loop in JavaScript?",
      "options": [
          "A. A way to loop through all events in the DOM",
          "B. A loop that iterates over all elements in an array",
          "C. A mechanism that processes and manages the execution of asynchronous tasks",
          "D. A loop that iterates over all properties of an object"
      ],
      "answer": "C. A mechanism that processes and manages the execution of asynchronous tasks"
  },
  {
      "question": "What is the purpose of the 'JSON.stringify' method in JavaScript?",
      "options": [
          "A. To convert a JavaScript object to a JSON string",
          "B. To parse a JSON string into a JavaScript object",
          "C. To check if a variable is of type JSON",
          "D. To format a JSON string for human readability"
      ],
      "answer": "A. To convert a JavaScript object to a JSON string"
  },
  {
      "question": "What is the purpose of the 'Promise' object in JavaScript?",
      "options": [
          "A. To represent a value that might be available now, in the future, or never",
          "B. To create a one-time event that will be triggered when a condition is met",
          "C. To define custom events",
          "D. To handle exceptions in asynchronous code"
      ],
      "answer": "A. To represent a value that might be available now, in the future, or never"
  },
  {
      "question": "What is the difference between 'let' and 'var'?",
      "options": [
          "A. 'let' has block scope, while 'var' has function scope",
          "B. 'let' is used for variables, while 'var' is used for constants",
          "C. 'let' is hoisted to the top of the block, while 'var' is hoisted to the top of the function",
          "D. 'let' and 'var' are interchangeable and can be used in place of each other"
      ],
      "answer": "A. 'let' has block scope, while 'var' has function scope"
  },
  {
      "question": "What is the purpose of the 'fetch' API in JavaScript?",
      "options": [
          "A. To fetch external CSS files",
          "B. To fetch resources from a server using HTTP requests",
          "C. To fetch random numbers for generating secure tokens",
          "D. To fetch data from the local storage"
      ],
      "answer": "B. To fetch resources from a server using HTTP requests"
  },
  {
      "question": "What is the purpose of the 'async' and 'await' keywords in JavaScript?",
      "options": [
          "A. To define a function as asynchronous",
          "B. To pause the execution of a function until a promise is settled",
          "C. To handle exceptions in asynchronous code",
          "D. All of the above"
      ],
      "answer": "D. All of the above"
  }
]
